{
  "{\"sourceRoot\":\"C:\\\\Users\\\\kasra\\\\httpsgithub.com\\\\mearn-project\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\kasra\\\\httpsgithub.com\\\\mearn-project\",\"filename\":\"C:\\\\Users\\\\kasra\\\\httpsgithub.com\\\\mearn-project\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\kasra\\\\httpsgithub.com\\\\mearn-project\",\"plugins\":[],\"presets\":[]}:7.8.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\kasra\\httpsgithub.com\\mearn-project\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\kasra\\httpsgithub.com\\mearn-project",
      "filename": "C:\\Users\\kasra\\httpsgithub.com\\mearn-project\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\kasra\\httpsgithub.com\\mearn-project",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\kasra\\httpsgithub.com\\mearn-project\\src\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\kasra\\httpsgithub.com\\mearn-project\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\kasra\\httpsgithub.com\\mearn-project\\src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "//console.log(\"Hello World!\");\nconst express = require('express');\n\nconst app = express();\nconst port = 3000;\napp.use(express.json());\napp.use(express.urlencoded({\n  extended: true\n}));\nconst users = [{\n  id: 0,\n  firstName: \"Kasra\",\n  lastName: \"Tabrizi\",\n  age: 30\n}];\napp.get('/users', (req, res) => {\n  res.json(users);\n});\napp.get('/users/:userId', (req, res) => {\n  res.json(users[req.params.userId]);\n});\napp.post('/users', (req, res) => {\n  users.push({\n    id: users.length,\n    ...req.body\n  });\n  res.json(users);\n});\napp.put('/users/:userId', (req, res) => {\n  users[req.params.userId] = req.body;\n  res.json(users);\n});\napp.delete('/users/:userId', (req, res) => {\n  users.splice(req.params.userId, 1);\n  res.json(users);\n});\napp.listen(port, () => console.log(`Example app listening on port ${port}!`));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiYXBwIiwicG9ydCIsInVzZSIsImpzb24iLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJ1c2VycyIsImlkIiwiZmlyc3ROYW1lIiwibGFzdE5hbWUiLCJhZ2UiLCJnZXQiLCJyZXEiLCJyZXMiLCJwYXJhbXMiLCJ1c2VySWQiLCJwb3N0IiwicHVzaCIsImxlbmd0aCIsImJvZHkiLCJwdXQiLCJkZWxldGUiLCJzcGxpY2UiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsTUFBTUMsR0FBRyxHQUFHRixPQUFPLEVBQW5CO0FBQ0EsTUFBTUcsSUFBSSxHQUFHLElBQWI7QUFFQUQsR0FBRyxDQUFDRSxHQUFKLENBQVFKLE9BQU8sQ0FBQ0ssSUFBUixFQUFSO0FBQ0FILEdBQUcsQ0FBQ0UsR0FBSixDQUFRSixPQUFPLENBQUNNLFVBQVIsQ0FBbUI7QUFBRUMsRUFBQUEsUUFBUSxFQUFFO0FBQVosQ0FBbkIsQ0FBUjtBQUVBLE1BQU1DLEtBQUssR0FBRyxDQUNWO0FBQ0lDLEVBQUFBLEVBQUUsRUFBRSxDQURSO0FBRUlDLEVBQUFBLFNBQVMsRUFBRSxPQUZmO0FBR0lDLEVBQUFBLFFBQVEsRUFBRSxTQUhkO0FBSUlDLEVBQUFBLEdBQUcsRUFBRTtBQUpULENBRFUsQ0FBZDtBQVNBVixHQUFHLENBQUNXLEdBQUosQ0FBUSxRQUFSLEVBQWtCLENBQUNDLEdBQUQsRUFBTUMsR0FBTixLQUFjO0FBQzVCQSxFQUFBQSxHQUFHLENBQUNWLElBQUosQ0FBU0csS0FBVDtBQUNILENBRkQ7QUFJQU4sR0FBRyxDQUFDVyxHQUFKLENBQVEsZ0JBQVIsRUFBMEIsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEtBQWM7QUFDcENBLEVBQUFBLEdBQUcsQ0FBQ1YsSUFBSixDQUFTRyxLQUFLLENBQUNNLEdBQUcsQ0FBQ0UsTUFBSixDQUFXQyxNQUFaLENBQWQ7QUFDSCxDQUZEO0FBSUFmLEdBQUcsQ0FBQ2dCLElBQUosQ0FBUyxRQUFULEVBQW1CLENBQUNKLEdBQUQsRUFBTUMsR0FBTixLQUFjO0FBQzdCUCxFQUFBQSxLQUFLLENBQUNXLElBQU4sQ0FBVztBQUFFVixJQUFBQSxFQUFFLEVBQUVELEtBQUssQ0FBQ1ksTUFBWjtBQUFvQixPQUFHTixHQUFHLENBQUNPO0FBQTNCLEdBQVg7QUFDQU4sRUFBQUEsR0FBRyxDQUFDVixJQUFKLENBQVNHLEtBQVQ7QUFDSCxDQUhEO0FBS0FOLEdBQUcsQ0FBQ29CLEdBQUosQ0FBUSxnQkFBUixFQUEwQixDQUFDUixHQUFELEVBQU1DLEdBQU4sS0FBYztBQUNwQ1AsRUFBQUEsS0FBSyxDQUFDTSxHQUFHLENBQUNFLE1BQUosQ0FBV0MsTUFBWixDQUFMLEdBQTJCSCxHQUFHLENBQUNPLElBQS9CO0FBQ0FOLEVBQUFBLEdBQUcsQ0FBQ1YsSUFBSixDQUFTRyxLQUFUO0FBQ0gsQ0FIRDtBQUtBTixHQUFHLENBQUNxQixNQUFKLENBQVcsZ0JBQVgsRUFBNkIsQ0FBQ1QsR0FBRCxFQUFNQyxHQUFOLEtBQWM7QUFDdkNQLEVBQUFBLEtBQUssQ0FBQ2dCLE1BQU4sQ0FBYVYsR0FBRyxDQUFDRSxNQUFKLENBQVdDLE1BQXhCLEVBQWdDLENBQWhDO0FBQ0FGLEVBQUFBLEdBQUcsQ0FBQ1YsSUFBSixDQUFTRyxLQUFUO0FBQ0gsQ0FIRDtBQUtBTixHQUFHLENBQUN1QixNQUFKLENBQVd0QixJQUFYLEVBQWlCLE1BQU11QixPQUFPLENBQUNDLEdBQVIsQ0FBYSxpQ0FBZ0N4QixJQUFLLEdBQWxELENBQXZCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xca2FzcmFcXGh0dHBzZ2l0aHViLmNvbVxcbWVhcm4tcHJvamVjdFxcc3JjIiwic291cmNlc0NvbnRlbnQiOlsiLy9jb25zb2xlLmxvZyhcIkhlbGxvIFdvcmxkIVwiKTtcclxuY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcclxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG5jb25zdCBwb3J0ID0gMzAwMDtcclxuXHJcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xyXG5hcHAudXNlKGV4cHJlc3MudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiB0cnVlIH0pKTtcclxuXHJcbmNvbnN0IHVzZXJzID0gW1xyXG4gICAge1xyXG4gICAgICAgIGlkOiAwLFxyXG4gICAgICAgIGZpcnN0TmFtZTogXCJLYXNyYVwiLFxyXG4gICAgICAgIGxhc3ROYW1lOiBcIlRhYnJpemlcIixcclxuICAgICAgICBhZ2U6IDMwLFxyXG4gICAgfSxcclxuXTtcclxuXHJcbmFwcC5nZXQoJy91c2VycycsIChyZXEsIHJlcykgPT4ge1xyXG4gICAgcmVzLmpzb24odXNlcnMpO1xyXG59KTtcclxuXHJcbmFwcC5nZXQoJy91c2Vycy86dXNlcklkJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICByZXMuanNvbih1c2Vyc1tyZXEucGFyYW1zLnVzZXJJZF0pO1xyXG59KTtcclxuXHJcbmFwcC5wb3N0KCcvdXNlcnMnLCAocmVxLCByZXMpID0+IHtcclxuICAgIHVzZXJzLnB1c2goeyBpZDogdXNlcnMubGVuZ3RoLCAuLi5yZXEuYm9keSB9KTtcclxuICAgIHJlcy5qc29uKHVzZXJzKTtcclxufSk7XHJcblxyXG5hcHAucHV0KCcvdXNlcnMvOnVzZXJJZCcsIChyZXEsIHJlcykgPT4ge1xyXG4gICAgdXNlcnNbcmVxLnBhcmFtcy51c2VySWRdID0gcmVxLmJvZHk7XHJcbiAgICByZXMuanNvbih1c2Vycyk7XHJcbn0pO1xyXG5cclxuYXBwLmRlbGV0ZSgnL3VzZXJzLzp1c2VySWQnLCAocmVxLCByZXMpID0+IHtcclxuICAgIHVzZXJzLnNwbGljZShyZXEucGFyYW1zLnVzZXJJZCwgMSk7XHJcbiAgICByZXMuanNvbih1c2Vycyk7XHJcbn0pO1xyXG5cclxuYXBwLmxpc3Rlbihwb3J0LCAoKSA9PiBjb25zb2xlLmxvZyhgRXhhbXBsZSBhcHAgbGlzdGVuaW5nIG9uIHBvcnQgJHtwb3J0fSFgKSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "app",
        "port",
        "use",
        "json",
        "urlencoded",
        "extended",
        "users",
        "id",
        "firstName",
        "lastName",
        "age",
        "get",
        "req",
        "res",
        "params",
        "userId",
        "post",
        "push",
        "length",
        "body",
        "put",
        "delete",
        "splice",
        "listen",
        "console",
        "log"
      ],
      "mappings": "AAAA;AACA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,GAAG,GAAGF,OAAO,EAAnB;AACA,MAAMG,IAAI,GAAG,IAAb;AAEAD,GAAG,CAACE,GAAJ,CAAQJ,OAAO,CAACK,IAAR,EAAR;AACAH,GAAG,CAACE,GAAJ,CAAQJ,OAAO,CAACM,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AAEA,MAAMC,KAAK,GAAG,CACV;AACIC,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,SAAS,EAAE,OAFf;AAGIC,EAAAA,QAAQ,EAAE,SAHd;AAIIC,EAAAA,GAAG,EAAE;AAJT,CADU,CAAd;AASAV,GAAG,CAACW,GAAJ,CAAQ,QAAR,EAAkB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC5BA,EAAAA,GAAG,CAACV,IAAJ,CAASG,KAAT;AACH,CAFD;AAIAN,GAAG,CAACW,GAAJ,CAAQ,gBAAR,EAA0B,CAACC,GAAD,EAAMC,GAAN,KAAc;AACpCA,EAAAA,GAAG,CAACV,IAAJ,CAASG,KAAK,CAACM,GAAG,CAACE,MAAJ,CAAWC,MAAZ,CAAd;AACH,CAFD;AAIAf,GAAG,CAACgB,IAAJ,CAAS,QAAT,EAAmB,CAACJ,GAAD,EAAMC,GAAN,KAAc;AAC7BP,EAAAA,KAAK,CAACW,IAAN,CAAW;AAAEV,IAAAA,EAAE,EAAED,KAAK,CAACY,MAAZ;AAAoB,OAAGN,GAAG,CAACO;AAA3B,GAAX;AACAN,EAAAA,GAAG,CAACV,IAAJ,CAASG,KAAT;AACH,CAHD;AAKAN,GAAG,CAACoB,GAAJ,CAAQ,gBAAR,EAA0B,CAACR,GAAD,EAAMC,GAAN,KAAc;AACpCP,EAAAA,KAAK,CAACM,GAAG,CAACE,MAAJ,CAAWC,MAAZ,CAAL,GAA2BH,GAAG,CAACO,IAA/B;AACAN,EAAAA,GAAG,CAACV,IAAJ,CAASG,KAAT;AACH,CAHD;AAKAN,GAAG,CAACqB,MAAJ,CAAW,gBAAX,EAA6B,CAACT,GAAD,EAAMC,GAAN,KAAc;AACvCP,EAAAA,KAAK,CAACgB,MAAN,CAAaV,GAAG,CAACE,MAAJ,CAAWC,MAAxB,EAAgC,CAAhC;AACAF,EAAAA,GAAG,CAACV,IAAJ,CAASG,KAAT;AACH,CAHD;AAKAN,GAAG,CAACuB,MAAJ,CAAWtB,IAAX,EAAiB,MAAMuB,OAAO,CAACC,GAAR,CAAa,iCAAgCxB,IAAK,GAAlD,CAAvB",
      "sourceRoot": "C:\\Users\\kasra\\httpsgithub.com\\mearn-project\\src",
      "sourcesContent": [
        "//console.log(\"Hello World!\");\r\nconst express = require('express');\r\nconst app = express();\r\nconst port = 3000;\r\n\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: true }));\r\n\r\nconst users = [\r\n    {\r\n        id: 0,\r\n        firstName: \"Kasra\",\r\n        lastName: \"Tabrizi\",\r\n        age: 30,\r\n    },\r\n];\r\n\r\napp.get('/users', (req, res) => {\r\n    res.json(users);\r\n});\r\n\r\napp.get('/users/:userId', (req, res) => {\r\n    res.json(users[req.params.userId]);\r\n});\r\n\r\napp.post('/users', (req, res) => {\r\n    users.push({ id: users.length, ...req.body });\r\n    res.json(users);\r\n});\r\n\r\napp.put('/users/:userId', (req, res) => {\r\n    users[req.params.userId] = req.body;\r\n    res.json(users);\r\n});\r\n\r\napp.delete('/users/:userId', (req, res) => {\r\n    users.splice(req.params.userId, 1);\r\n    res.json(users);\r\n});\r\n\r\napp.listen(port, () => console.log(`Example app listening on port ${port}!`));"
      ]
    },
    "sourceType": "module",
    "mtime": 1583845925720
  }
}